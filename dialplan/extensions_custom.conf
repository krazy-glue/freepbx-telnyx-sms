[messages-in]
; Deliver to local 4-digit extension. If you use 3, 5 or other length extensions, adjust accordingly.
exten => _XXXX,1,Set(FROMUSER=${CUT(MESSAGE(from),<,2)})
same => n,Set(FROMUSER=${CUT(FROMUSER,@,1)})
same => n,Set(FROMUSER=${CUT(FROMUSER,:,2)})
same => n,Set(DID=${DB(AMPUSER/${EXTEN}/accountcode)})
same => n,Macro(get-vmcontext,${AMPUSER})
same => n,Set(EMAIL=${VM_INFO(${EXTEN}@${VMCONTEXT},email)})
same => n,Set(TODEVICE=${DB(DEVICE/${EXTEN}/dial)})
same => n,Set(TODEVICE=${TOLOWER(${STRREPLACE(TODEVICE,"/",":")})})
same => n,MessageSend(${TODEVICE},${FROMUSER})
same => n,ExecIf($["${MESSAGE_SEND_STATUS}" == "FAILURE"]?Goto(mail-${EXTEN},1))
same => n,Hangup()

; This could be improved. Any undeliverable SMS just gets sent to a catch-all email address. You
; could look up the extension user's email and send the message to their specific address instead.
exten => _mail-X.,1,NoOp(Sending mail)
same => n,System(echo "Text message from ${MESSAGE(from)} to ${EXTEN:5} - ${MESSAGE(body)}" | mail -s "New text to ${DID} received while offline" ${EMAIL})
same => n,Hangup()

[messages-out]
; This is a local 4-digit extension so we just want to send it internally
exten => _XXXX,1,Goto(messages-in,${EXTEN},1)
; Deliver to PSTN - adjust pattern to match your needs
; These are normalized so that we are working with 10-digit US/CAN numbers and then reformatted
; to +1 E164 in the outbound script. Rework it according to your preferences.
exten => _+1NXXNXXXXXX,1,Goto(messages-out,${EXTEN:2},1)
exten => _1NXXNXXXXXX,1,Goto(messages-out,${EXTEN:1},1)
exten => _NXXNXXXXXX,1,NoOp(Sending SMS to ${EXTEN} from ${MESSAGE(from)})
same => n,Set(FROMUSER=${CUT(MESSAGE(from),<,2)})
same => n,Set(FROMUSER=${CUT(FROMUSER,@,1)})
same => n,Set(FROMUSER=${CUT(FROMUSER,:,2)})
same => n,Set(CALLERID(num)=${FROMUSER})
same => n,Set(SMSCID=${DB(AMPUSER/${CALLERID(num)}/accountcode)})
same => n,ExecIf($["foo${SMSCID}" == "foo"]?Goto(messages-out,nocid,1):Set(FROM=${SMSCID}))
same => n,NoOp(Using external caller ID of ${FROM})
same => n,Set(CURLOPT(conntimeout)=4)
same => n,Set(CURLOPT(httptimeout)=4)
same => n,NoOp(${CURL(https://yourpbx/path/to/out.php?to=${EXTEN}&from=${FROM},${MESSAGE(body)})})
same => n,Hangup()
;
exten => nocid,1,Set(MESSAGE(body)=Cannot send SMS. Extension must have valid SMS CID set in the accountcode field.)
same => n,MessageSend(pjsip:${CALLERID(num)},${MESSAGE(from)})
same => n,Hangup()
;

